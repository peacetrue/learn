logging.level.root=debug



spring.jpa.show-sql=true
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none

#---------使用mysql自带的读写分离
#spring.datasource.url=jdbc:mysql:replication://localhost:3333,localhost:3334/schema?autoReconnect=true

# 这个解决方案远非理想。问题在于应用程序和连接池不知道底层分离。
# 就应用而言，所有连接都是相同的。驱动程序根据上面的readOnly标志简单地指向一个服务器或另一个服务器 -
# 驱动程序正在处理主/从连接。您无法控制主连接和从连接之间的池大小，这是自动处理的。
# 如果需要此功能，那么我建议使用基于代码的解决方案。


#---------使用spring的读写分离
#app.datasource.write.url=jdbc:mysql://localhost/testdb1
app.datasource.write.url=jdbc:h2:mem:test1
app.datasource.write.username=root
app.datasource.write.password=root

#app.datasource.read.url=jdbc:mysql://localhost/testdb2
app.datasource.read.url=jdbc:h2:mem:test2
app.datasource.read.username=root
app.datasource.read.password=root
app.datasource.read.max-total=30

